<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
      http://www.springframework.org/schema/aop
      http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
      http://www.springframework.org/schema/tx
      http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
      http://www.springframework.org/schema/context 
      http://www.springframework.org/schema/context/spring-context-2.5.xsd
      http://www.springframework.org/schema/jee
      http://www.springframework.org/schema/jee/spring-jee-2.5.xsd">
	
	
	<!-- ******************************************************************** -->
	<!-- This context file was generated and is not intended to be changed manually. -->
	<!-- ******************************************************************** -->
	
	<!-- ******************************************************************** -->
	<!-- Mark bean transactions as annotation driven -->
	<!-- ******************************************************************** -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- ******************************************************************** -->
	<!-- PropertyConfigurer for the DAO -->
	<!-- ******************************************************************** -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:ScaffoldingExample-dao.properties" />
	</bean>
	
	<!-- ******************************************************************** -->
	<!-- Setup the transaction manager -->
	<!-- ******************************************************************** -->
	<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init" destroy-method="close">
		<property name="forceShutdown" value="true" />
		<property name="startupTransactionService" value="true" />
		<property name="transactionTimeout" value="60" />
	</bean>
	
	<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp" />
	
	<!-- Configure the Spring framework to use JTA transactions from Atomikos -->
	<bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
		<property name="transactionManager" ref="atomikosTransactionManager" />
		<property name="userTransaction" ref="atomikosUserTransaction" />
		<property name="transactionSynchronizationName" value="SYNCHRONIZATION_ON_ACTUAL_TRANSACTION" />
	</bean>
	
	<!-- ******************************************************************** -->
	<!-- A distinct entry for each persistence unit used in this project -->
	<!-- ******************************************************************** -->
	
		<!-- Make a Datasource -->
				<bean id="LocalhostMySQLDS" class="com.atomikos.jdbc.nonxa.AtomikosNonXADataSourceBean" >
					<property name="uniqueResourceName" value="LocalhostMySQL__-lJ1IJK1EeKSM9oWtGh5-Q" />
					<property name="driverClassName" value="${LocalhostMySQL.connection.driver_class}" />
					<property name="user" value="${LocalhostMySQL.connection.username}" />
					<property name="password" value="${LocalhostMySQL.connection.password}" />
					<property name="url" value="${LocalhostMySQL.connection.url}" />
					<property name="minPoolSize" value="${LocalhostMySQL.minPoolSize}" />
					<property name="maxPoolSize" value="${LocalhostMySQL.maxPoolSize}" />
				</bean>
		
		<!-- Configure a JPA vendor adapter -->
		<bean id="LocalhostMySQLJPAVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
			<property name="showSql" value="${LocalhostMySQL.show_sql}" />
			<property name="generateDdl" value="${LocalhostMySQL.generateDdl}" />
			<property name="databasePlatform" value="${LocalhostMySQL.dialect}" />
		</bean>
		
		<!-- now an EntityManager Factory that brings together the persistence unit, datasource, and JPA Vendor -->
		<bean id="LocalhostMySQL" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
			<property name="dataSource" ref="LocalhostMySQLDS" />
			<property name="persistenceUnitName" value="LocalhostMySQL" />
			<property name="jpaVendorAdapter" ref="LocalhostMySQLJPAVendorAdapter" />
			<property name="jpaPropertyMap">
				<map>
					<entry key="hibernate.transaction.manager_lookup_class" value="com.atomikos.icatch.jta.hibernate3.TransactionManagerLookup" />
					<entry key="hibernate.connection.release_mode" value="on_close" />
				</map>
			</property>
		</bean>
		
	
</beans>
